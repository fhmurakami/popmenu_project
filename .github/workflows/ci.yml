name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      RAILS_ENV: test
      PGHOST: localhost
      PGUSER: postgres
      PGPASSWORD: postgres
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Set up Node and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: yarn

      - name: Install JavaScript dependencies
        run: yarn install

      - name: Build assets
        run: yarn build && bundle exec rails tailwindcss:build

      - name: Prepare test database
        run: |
          cp config/database.yml.github-actions config/database.yml
          bundle exec rails db:prepare

      - name: Run RSpec test suite
        run: bundle exec rspec

      - name: Upload SimpleCov coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

      - name: Print test coverage summary
        run: |
          cat coverage/.last_run.json | jq '.result.line_coverage'
          cat coverage/index.html | grep -A 5 "Coverage report generated"

      - name: Run Jest tests
        run: yarn test --ci --coverage

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github
